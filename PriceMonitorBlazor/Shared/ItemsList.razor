@using PriceMonitorData
@inject ItemPriceRepository db
@using Microsoft.AspNetCore.Mvc.TagHelpers

<div class="mt-4">
    @if (items == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>URL</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td><a href="@item.Url">@item.Url</a></td>
                        <td>
                            <ItemActions Name="@item.Name" Url="@item.Url" OnRemoveClick="@OnRemoveItem" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    [Parameter]
    public string Email { get; set; }

    private Item[] items;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (items == null)
        {
            await LoadItems();
        }
    }

    async Task LoadItems()
    {
        try
        {
            items = (await db.GetItemsBySubscriber(Email)).ToArray();

            this.StateHasChanged();
        }
        catch { }
    }

    async Task OnRemoveItem(Item item)
    {
        try
        {
            var itemResponse = await db.RemoveSubscriberFromItem(item, Email);

            await LoadItems();
        }
        catch { }
    }
}
